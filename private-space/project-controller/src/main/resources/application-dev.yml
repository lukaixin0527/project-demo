# 端口号
server:
  port: 8080

# 数据库连接信息
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/project-test?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root

    druid:
      initial-size: 5 #连接池初始化大小
      min-idle: 10 #最小空闲连接数
      max-active: 20 #最大连接数
      web-stat-filter:
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" #不统计这些请求数据
      stat-view-servlet: #访问监控网页的登录用户名和密码 http://localhost:8080/druid/sql.html
        login-username: druid
        login-password: druid
    driver-class-name: com.mysql.jdbc.Driver

# redis配置信息
  redis:
    database: 0
    host: localhost
    port: 6379
    password:
    lettuce:
      pool:
        max-active: 8 #连接池最大连接数（使用负值表示没有限制） 默认 8
        max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-idle: 8   # 连接池中的最大空闲连接 默认 8
        min-idle: 0   # 连接池中的最小空闲连接 默认 0

# 应用名称 + springboot-server服务地址 + 安全登录账号密码
  application:
    name: project-controller
  boot:
    admin:
      client:
        url: http://localhost:8000
        username: admin
        password: admin

# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放,只需开发health即可
management:
  endpoints:
    web:
      exposure:
        include: ['health','httptrace','threaddump']
  endpoint:
    health:
      show-details: ALWAYS

#  /configprops 描述配置属性(包含默认值)如何注入Bean
#  /env 获取全部环境属性
#  /env/{name} 根据名称获取特定的环境属性值
#  /flyway 提供一份 Flyway 数据库迁移信息
#  /liquidbase 显示Liquibase 数据库迁移的纤细信息
#  /health 报告应用程序的健康指标，这些值由 HealthIndicator 的实现类提供
#  /heapdump dump 一份应用的 JVM 堆信息
#  /httptrace 显示HTTP足迹，最近100个HTTP request/repsponse
#  /info 获取应用程序的定制信息，这些信息由info打头的属性提供
#  /logfile 返回log file中的内容(如果 logging.file 或者 logging.path 被设置)
#  /loggers 显示和修改配置的loggers
#  /metrics 报告各种应用程序度量信息，比如内存用量和HTTP请求计数
#  /metrics/{name} 报告指定名称的应用程序度量值
#  /scheduledtasks 展示应用中的定时任务信息
#  /sessions 如果我们使用了 Spring Session 展示应用中的 HTTP sessions 信息
#  /shutdown 关闭应用程序，要求endpoints.shutdown.enabled设置为true
#  /mappings 描述全部的 URI路径，以及它们和控制器(包含Actuator端点)的映射关系
#  /threaddump 获取线程活动的快照









